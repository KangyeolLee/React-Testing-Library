{"version":3,"sources":["components/Header/styles.ts","components/Header/Header.tsx","components/LoadData/styles.ts","api/fetchers.ts","hooks/useUser.tsx","constants/apis.ts","components/LoadData/SuspenseData.tsx","assets/gossip.png","components/LoadData/LoadData.tsx"],"names":["Header","styled","header","theme","color","text","HeaderTitle","h1","title","className","to","LoadData","section","Article","article","MoreButton","button","Url","div","Num","span","fetcherUserByPage","url","a","axios","get","headers","Authorization","process","res","data","getKey","pageIndex","prevPageData","length","useUser","useSWRInfinite","suspense","size","setSize","isValidating","isReachingEnd","flatMap","d","SuspenseData","disabled","onClick","map","urls","index","id","Spinner","position","draggable","src","gossip","alt","fallback","data-testid"],"mappings":"6LAEaA,EAASC,IAAOC,OAAV,sKAMN,qBAAGC,MAAkBC,MAAMC,QAK3BC,EAAcL,IAAOM,GAAV,0JAEb,qBAAGJ,MAAkBC,MAAMC,Q,eCIvBL,EAXA,SAAC,GAAsB,IAApBQ,EAAmB,EAAnBA,MAChB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,UAAgBA,IAChB,cAAC,IAAD,CAAMC,UAAU,YAAYC,GAAG,IAA/B,qC,2GCVOC,EAAWV,IAAOW,QAAV,uNAYRC,EAAUZ,IAAOa,QAAV,8QAoBPC,EAAad,IAAOe,OAAV,iYAwBVC,EAAMhB,IAAOiB,IAAV,iDAIHC,EAAMlB,IAAOmB,KAAV,wE,iEC5DHC,EAAiB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACbC,IAAMC,IAAIH,EAAK,CAC/BI,QAAS,CACPC,cAAc,SAAD,OAAWC,+CAHG,cACzBC,EADyB,yBAMxBA,EAAIC,MANoB,2CAAH,sD,QCQxBC,EAAS,SAACC,EAAmBC,GACjC,OAAIA,IAAiBA,EAAaC,OAAe,KAC3C,gCAAN,OCVe,qBDUf,4BCZuB,EDYvB,iBACEF,EAAY,IAsBDG,EAlBC,WAAO,IAAD,IAC0BC,YAC5CL,EACAV,EACA,CAAEgB,UAAU,IAHNP,EADY,EACZA,KAAMQ,EADM,EACNA,KAAMC,EADA,EACAA,QAASC,EADT,EACSA,aAMvBC,EAAgBX,IAAQ,UAAAA,EAAKA,EAAKI,OAAS,UAAnB,eAAuBA,QCxB9B,ED0BvB,MAAO,CACLJ,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMY,SAAQ,SAACC,GAAD,OAAOA,KAC3BL,OACAC,UACAC,eACAC,kB,OEAWG,EA1BM,WAAO,IAAD,EACoCT,IAArDL,EADiB,EACjBA,KAAMQ,EADW,EACXA,KAAMC,EADK,EACLA,QAASC,EADJ,EACIA,aAAcC,EADlB,EACkBA,cAE3C,OACE,qCACE,sBAAKhC,UAAU,qBAAf,UACE,sHACA,cAAC,EAAD,CACEoC,SAAUJ,EACVK,QAAS,kBAAMP,EAAQD,EAAO,IAFhC,mCAQDR,EAAKiB,KAAI,SAACC,EAAMC,GAAP,OACR,eAAC,EAAD,WACE,eAAC,EAAD,eAASA,EAAQ,KADnB,IAC+BD,EAAK1B,MADxB0B,EAAKE,OAKlBV,GAAgB,cAACW,EAAA,EAAD,CAASC,SAAS,eC1B1B,MAA0B,mCC+B1BzC,EAvBE,WACf,OACE,eAAC,EAAD,CAAYF,UAAU,YAAtB,UACE,cAACT,EAAA,EAAD,CAAQQ,MAAM,mEAEd,sBAAKC,UAAU,kBAAf,UACE,cAAC,EAAD,UACE,qBACE4C,UAAU,QACVC,IAAKC,EACLC,IAAI,kFAGR,cAAC,EAAD,UACE,cAAC,WAAD,CAAUC,SAAU,cAACN,EAAA,EAAD,CAASO,cAAY,iBAAzC,SACE,cAAC,EAAD","file":"static/js/4.5a931f88.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n\n  a {\n    text-decoration: none;\n    color: ${({ theme }) => theme.color.text};\n    border-radius: 1rem;\n  }\n`;\n\nexport const HeaderTitle = styled.h1`\n  font-size: 1.5rem;\n  color: ${({ theme }) => theme.color.text};\n  font-family: \"Nanum Gothic\", sans-serif;\n  font-weight: 700;\n  margin-bottom: 2rem;\n`;\n","import * as S from \"./styles\";\n\nimport { Link } from \"react-router-dom\";\n\ntype Props = {\n  title: string;\n};\n\nconst Header = ({ title }: Props) => {\n  return (\n    <S.Header>\n      <S.HeaderTitle>{title}</S.HeaderTitle>\n      <Link className=\"touchable\" to=\"/\">\n        홈으로\n      </Link>\n    </S.Header>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const LoadData = styled.section`\n  font-family: \"Nanum Gothic\", sans-serif;\n\n  .article-wrapper {\n    display: flex;\n    gap: 2rem;\n    padding: 2rem;\n    border-radius: 1rem;\n    background-color: #f4b400;\n  }\n`;\n\nexport const Article = styled.article`\n  color: #fff;\n  width: 50%;\n\n  h2 {\n    font-size: 1.2rem;\n    font-weight: 600;\n  }\n\n  img {\n    width: 100%;\n  }\n\n  .sub-header-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const MoreButton = styled.button`\n  font-family: \"Nanum Gothic\", sans-serif;\n  border: none;\n  outline: none;\n  background-color: #00a243;\n  color: #fff;\n  padding: 0.45rem 1rem;\n  border-radius: 0.5rem;\n  cursor: pointer;\n\n  &:disabled {\n    background-color: #e1e1e1;\n    cursor: default;\n\n    &:hover {\n      opacity: 1;\n    }\n  }\n\n  &:hover {\n    opacity: 0.85;\n  }\n`;\n\nexport const Url = styled.div`\n  margin: 0.5rem 0;\n`;\n\nexport const Num = styled.span`\n  font-size: 1.15rem;\n  font-weight: 700;\n`;\n","import axios from \"axios\";\n\nexport const fetcherUserByPage = async (url: string) => {\n  const res = await axios.get(url, {\n    headers: {\n      Authorization: `token ${process.env.REACT_APP_GITHUB_TOKEN}`,\n    },\n  });\n  return res.data;\n};\n","import { PAGE_SIZE, REPO } from \"@/constants/apis\";\n\nimport { fetcherUserByPage } from \"@/api/fetchers\";\nimport useSWRInfinite from \"swr/infinite\";\n\ntype Data = {\n  url: string;\n  id: number;\n};\n\nconst getKey = (pageIndex: number, prevPageData: Data[] | null) => {\n  if (prevPageData && !prevPageData.length) return null;\n  return `https://api.github.com/repos/${REPO}/issues?per_page=${PAGE_SIZE}&page=${\n    pageIndex + 1\n  }`;\n};\n\nconst useUser = () => {\n  const { data, size, setSize, isValidating } = useSWRInfinite(\n    getKey,\n    fetcherUserByPage,\n    { suspense: true }\n  );\n\n  const isReachingEnd = data && data[data.length - 1]?.length < PAGE_SIZE;\n\n  return {\n    data: data?.flatMap((d) => d) as Data[],\n    size,\n    setSize,\n    isValidating,\n    isReachingEnd,\n  };\n};\n\nexport default useUser;\n","export const PAGE_SIZE = 3;\n\nexport const REPO = `reactjs/react-a11y`;\n","import * as S from \"./styles\";\n\nimport Spinner from \"@/components/Spinner\";\nimport useUser from \"@/hooks/useUser\";\n\nconst SuspenseData = () => {\n  const { data, size, setSize, isValidating, isReachingEnd } = useUser();\n\n  return (\n    <>\n      <div className=\"sub-header-wrapper\">\n        <h2>SUSPENSE를 이용한 선언적 비동기 처리</h2>\n        <S.MoreButton\n          disabled={isReachingEnd}\n          onClick={() => setSize(size + 1)}\n        >\n          더보기\n        </S.MoreButton>\n      </div>\n\n      {data.map((urls, index) => (\n        <S.Url key={urls.id}>\n          <S.Num>#{index + 1}</S.Num> {urls.url}\n        </S.Url>\n      ))}\n\n      {isValidating && <Spinner position=\"center\" />}\n    </>\n  );\n};\n\nexport default SuspenseData;\n","export default __webpack_public_path__ + \"static/media/gossip.297bd91c.png\";","import * as S from \"./styles\";\n\nimport Header from \"@/components/Header\";\nimport Spinner from \"@/components/Spinner\";\nimport { Suspense } from \"react\";\nimport SuspenseData from \"./SuspenseData\";\nimport gossip from \"@/assets/gossip.png\";\n\nconst LoadData = () => {\n  return (\n    <S.LoadData className=\"container\">\n      <Header title=\"데이터 불러오기 테스트\" />\n\n      <div className=\"article-wrapper\">\n        <S.Article>\n          <img\n            draggable=\"false\"\n            src={gossip}\n            alt=\"데이터 불러오기 관련 이미지\"\n          />\n        </S.Article>\n        <S.Article>\n          <Suspense fallback={<Spinner data-testid=\"test-spinner\" />}>\n            <SuspenseData />\n          </Suspense>\n        </S.Article>\n      </div>\n    </S.LoadData>\n  );\n};\n\nexport default LoadData;\n"],"sourceRoot":""}